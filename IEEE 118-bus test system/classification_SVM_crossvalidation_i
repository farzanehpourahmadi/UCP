n_f=93; % number of features
n_n=5000; % number of training samples
d_n=1000; % number of validation samples

for idx = find(y==0)
   y(idx) = -1; % The unit is off when yy2 is -1
end
%% Cross Validation (no. of folds=4)
for ii=1:4
    xx_v_new(:,1:d_n)=xx_new(:,(ii-1)*d_n+1:ii*d_n);
    yy_v(:,1:d_n)=y(:,(ii-1)*d_n+1:ii*d_n);
    if ii>1
        xx_tr_new(:,1:(ii-1)*d_n)=xx_new(:,1:(ii-1)*d_n);
        yy_tr(:,1:(ii-1)*d_n)=y(:,1:(ii-1)*d_n);
    end
    xx_tr_new(:,(ii-1)*d_n+1:n_n-d_n)=xx_new(:,ii*d_n+1:n_n);
    yy_tr(:,(ii-1)*d_n+1:n_n-d_n)=y(:,ii*d_n+1:n_n);
% Exploring different values for the regularization parameter
radius=[0.000001 0.000005 0.00001 0.00005 0.0001 0.0005 0.001 0.005 0.01 0.05];

for i=1:length(yy_tr(:,1))
    if sum(yy_tr(i,:))==length(yy_tr(1,:))
        weight=ones(n_f+1,1);
    elseif sum(yy_tr(i,:))==-length(yy_tr(1,:))
        weight=-ones(n_f+1,1);
    elseif sum(yy_tr(i,:))==0
        weight=-ones(n_f+1,1);
    else
  for m=1:length(radius)
      % Linear suppor vector machine with regularization
        w=sdpvar(n_f+1,1,'full');
        options = sdpsettings('solver','osqp');
        objective=(1/(n_n-d_n))*(sum(max(1-diag(yy_tr(i,:))*xx_tr_new'*w,0)))+radius(m)*norm(w,2)^2;
        optimize([],objective,options);
        weight(:,m)=value(w);
        Objective_SVM{i}=value(objective);
  end   
    i
    end
    Weight{ii,i}=weight;
end


    for i=1:length(yy_tr(:,1))
    if sum(yy_tr(i,:))~=length(yy_tr(1,:)) && sum(yy_tr(i,:))~=-length(yy_tr(1,:)) && sum(yy_tr(i,:))~=0
        for m=1:length(radius)
            yy_t=sign(Weight{ii,i}(:,m)'*xx_v_new);
            k(m)=0;
            for j=1:d_n
                if sign(yy_t(j))-sign(yy_v(i,j))==0
                    k(m)=k(m)+1;
                end
            end
        end
        radius_best{ii,i}=radius(find(k==max(k)));
        k_best{ii,i}=k;
        end

    end
    ii
end




